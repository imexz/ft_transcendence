OverView

[✔]Backend in NestJS
[✔]Frontend in tsFramework
[✔]all libs latest-stable Version
[✔]PostgreSQL as DB
[✔]website SPA,(use back+forward-Buttons)
[✘]compatibel latest-stable Chrome (we do not have latest stable on campus)
[✘]user, no unhandled errors or warnings
[✔]launch everything with docker-compose up --build

Security

[✔]any pw in db hashed (toDo check hashing algo)
[✘]protected against SQL injections
[✘]serverside validation for forms+user-input
[✔].env file private (toDo create README for setup)

User Account


[✔]login via Oauth of 42Intra
[✘]user can choose unique name (toDo find a way to make usernames on login unique)
[✔]user can upload avatar + default avatar (toDo limit fileSize)
[✔]user can enable 2FA
[✘]user can add friends + view their status (toDo check for live updating, i.e. show in userProfile )
[✔]stats are displayed on user profile
[✘]user has MatchHistory, anyone can view it (toDo finalze implementation)

Chat

[✔]user can create channels (public, private, pw protected)
[✘]user can dm other (toDo fix rooms not having names in store on creation)
[✘]user can block other users(no more msg) (toDo add button switch + popUp on blocked user side)
[✘]channel creator is owner till leave (toDo remove ownership)
    set, change, remove pw, (toDo public private changes needs work in backend)
    set other users as admin, (toDo discuss buttons)
    admin can ban + mute users
[✔]user can invite users to play pong
[✔]user can view other user profiles

Game

[✔✘]user can play live pong vs other users (wonky components after reload or reconnect either score or padels)
[✔]matchMakingSystem
[✔]game be there
[✘]game must be customizeable
[✔✘]game must be responsive (toDo make schmoooov + balance)
[✔✘]users can spectate other games (wonky components either score or padels)


[✔]