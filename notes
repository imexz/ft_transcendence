Starting a Game:

1. Queue
1.1. successful
1.2. abort before success
1.3. waiting for match


2. Invite

2.1. Invitor is available
    2.1.1. invited player is available
        2.1.1.1. accept
        2.1.1.2. deny
        2.1.1.3. does not reply --> deny after certain time passed
    2.1.2. invited player is unavailable
        2.1.2.1. invited player is offline                    // no effect
        2.1.2.2. invited player is playing a game             // start spectate
        2.1.2.3. invited player is spectating a game          // also spectate
2.2. Invitor is in a game --> no effect


Topics:

emit only ball, paddle on demand

implement askForRematch

spectating with pending invite. denies, spectator still in field view
Spectator: Winning Screen shows "askForRematch" Button
sending someone spectating a gamerequest

Change hitbox of paddles / collision control
Limit serving angle

implement game settings

implement game customization

Ideas:
    do not change view when adding user as friend

Done:
<!-- After Game: invite winner to game (even if its the same person) -->
<!-- spectating a game via paddleIcon leads to range error -->
<!-- autoselect form field when clicking on search icon -->
<!-- When in Game: paddleButton in UserSummery is clickable -->
<!-- No invites from User currently playing -->
<!-- Reload when invited and accepted a game -->
<!-- x invites y, z invites x -> game starts for x and y, z spectates -->
<!-- x invites y, z invites x, y denies -> x plays vs z -->
<!-- viewRequest: when user in game and tries to invite/view game of third user ->cannot read undefined -->
<!-- Reload during game with playerleft: doesnt render current game -->
<!-- When invited, inviting the other player back should not be possible -->
<!-- leaveGame: remove Spectators in gameService.spectatorsMap -->
<!-- joinAndCreateGame function: x goes to queue, y invites x -> close searchbar -->
<!-- Search for player y, log out player y, invite player y to a match -> starts game... -->
<!-- x creates match, logs out, y joins via queue. both stuck -->
<!-- game started, log out playerLeft, play button -->


